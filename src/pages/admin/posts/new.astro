---
import { themeConfig } from '@/config'
import AdminLayout from '@/layouts/AdminLayout.astro'
import type { AdminLayoutProps } from '@/types'

interface Props extends AdminLayoutProps {}

const session = await getSession(Astro.request)
if (!session) {
  return Astro.redirect('/auth/login')
}

const props: AdminLayoutProps = {
  title: 'New Post',
  description: 'Create a new blog post',
  config: themeConfig,
  requireAuth: true
}
---

<AdminLayout {...props}>
  <div class="container mx-auto px-4 py-8">
    <h1 class="mb-8 text-3xl font-bold">New Post</h1>
    <form id="post-form" class="space-y-6">
      <div>
        <label for="title" class="mb-2 block text-sm font-medium">Title</label>
        <input
          type="text"
          id="title"
          name="title"
          class="w-full rounded-lg border p-2"
          required
        />
      </div>
      <div>
        <label for="content" class="mb-2 block text-sm font-medium">Content</label>
        <textarea
          id="content"
          name="content"
          rows="10"
          class="w-full rounded-lg border p-2"
          required></textarea>
      </div>
      <div>
        <label for="categories" class="mb-2 block text-sm font-medium"
          >Categories</label
        >
        <input
          type="text"
          id="categories"
          name="categories"
          class="w-full rounded-lg border p-2"
          placeholder="Comma-separated categories"
        />
      </div>
      <div>
        <label for="tags" class="mb-2 block text-sm font-medium">Tags</label>
        <input
          type="text"
          id="tags"
          name="tags"
          class="w-full rounded-lg border p-2"
          placeholder="Comma-separated tags"
        />
      </div>
      <div>
        <label for="draft" class="inline-flex items-center">
          <input
            type="checkbox"
            id="draft"
            name="draft"
            class="rounded border-gray-300"
          />
          <span class="ml-2 text-sm">Save as draft</span>
        </label>
      </div>
      <button
        type="submit"
        class="rounded-lg bg-blue-500 px-4 py-2 text-white hover:bg-blue-600"
      >
        Create Post
      </button>
    </form>
  </div>
</AdminLayout>

<script>
  const form = document.querySelector('#post-form')

  form?.addEventListener('submit', async (e) => {
    e.preventDefault()
    const formData = new FormData(e.target as HTMLFormElement)

    const data = {
      title: formData.get('title'),
      content: formData.get('content'),
      categories: formData.get('categories')?.toString().split(',').map(c => c.trim()),
      tags: formData.get('tags')?.toString().split(',').map(t => t.trim()),
      draft: formData.get('draft') === 'on'
    }

    try {
      const response = await fetch('/api/posts', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      })

      if (response.ok) {
        window.location.href = '/admin/posts'
      } else {
        console.error('Failed to create post')
      }
    } catch (error) {
      console.error('Error creating post:', error)
    }
  })
</script>
