---
import type { CollectionEntry } from 'astro:content'
import { getCollection } from 'astro:content'
import AdminLayout from '@/layouts/AdminLayout.astro'

const posts = await getCollection('posts')
const sortedPosts = posts.sort((a: CollectionEntry<'posts'>, b: CollectionEntry<'posts'>) => {
  return new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
})
---

<AdminLayout title="文章管理">
  <div class="container mx-auto px-4 py-8">
    <div class="flex justify-between items-center mb-6">
      <h1 class="text-2xl font-bold">文章管理</h1>
      <a
        href="/admin/posts/new"
        class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
      >
        新建文章
      </a>
    </div>

    <div class="bg-white shadow overflow-hidden sm:rounded-md">
      <ul role="list" class="divide-y divide-gray-200">
        {sortedPosts.map((post) => (
          <li>
            <a href={`/admin/posts/${post.slug}/edit`} class="block hover:bg-gray-50">
              <div class="px-4 py-4 sm:px-6">
                <div class="flex items-center justify-between">
                  <p class="text-sm font-medium text-indigo-600 truncate">
                    {post.data.title}
                  </p>
                  <div class="ml-2 flex-shrink-0 flex">
                    {post.data.draft && (
                      <p class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-yellow-100 text-yellow-800">
                        Draft
                      </p>
                    )}
                  </div>
                </div>
                <div class="mt-2 sm:flex sm:justify-between">
                  <div class="sm:flex">
                    <p class="flex items-center text-sm text-gray-500">
                      {post.data.description}
                    </p>
                  </div>
                  <div class="mt-2 flex items-center text-sm text-gray-500 sm:mt-0">
                    <p>
                      Last updated{' '}
                      {new Date(post.data.pubDate).toLocaleDateString()}
                    </p>
                  </div>
                </div>
              </div>
            </a>
          </li>
        ))}
      </ul>
    </div>
  </div>
</AdminLayout>

<script>
const handleDeletePost = async (postId: string) => {
  try {
    const response = await fetch(`/api/posts/${postId}`, {
      method: 'DELETE',
    })

    if (response.ok) {
      window.location.reload()
    } else {
      alert('Failed to delete post')
    }
  } catch (error) {
    console.error('Error:', error)
    alert('Failed to delete post')
  }
}

document.addEventListener('click', (e) => {
  const target = e.target as HTMLElement
  if (target.matches('[data-delete-post]')) {
    e.preventDefault()
    if (!confirm('Are you sure you want to delete this post?')) {
      return
    }

    const postId = target.dataset.deletePost
    if (postId) {
      handleDeletePost(postId)
    }
  }
})
</script>
