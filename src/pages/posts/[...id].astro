---
import { getCollection, type CollectionEntry } from 'astro:content'
import LayoutPost from '@/layouts/LayoutPost.astro'
import type { Post } from '@/types'

export async function getStaticPaths() {
  const posts = await getCollection('posts')
  const sortedPosts = posts
    .filter((post) => !post.data.draft)
    .sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime())

  return sortedPosts.map((post, index) => ({
    params: { id: post.slug },
    props: {
      post,
      prev: index > 0 ? sortedPosts[index - 1] : null,
      next: index < sortedPosts.length - 1 ? sortedPosts[index + 1] : null,
    },
  }))
}

interface Props {
  post: CollectionEntry<'posts'>
  prev: CollectionEntry<'posts'> | null
  next: CollectionEntry<'posts'> | null
}

const { post, prev, next } = Astro.props as Props
const { Content } = await post.render()

---

<LayoutPost post={post} prev={prev} next={next}>
  <div class="prose prose-lg dark:prose-invert mx-auto">
    <Content />
  </div>
</LayoutPost>
