---
import type { GetStaticPaths } from 'astro'
import type { CollectionEntry } from 'astro:content'
import type { Language, PostMeta } from '@/types'
import { getCollection } from 'astro:content'
import { themeConfig } from '@/config/default'
import { useTranslations } from '@/i18n'
import BaseLayout from '@/layouts/BaseLayout.astro'
import PostList from '@/components/PostList.astro'

export const getStaticPaths: GetStaticPaths = async () => {
  const posts = await getCollection('posts')
  const categories = [...new Set(posts.flatMap(post => post.data.categories || []))]
  
  return categories.map(category => {
    const filteredPosts = posts.filter(post => 
      post.data.categories?.includes(category)
    )
    return {
      params: { category },
      props: { category, posts: filteredPosts }
    }
  })
}

interface Props {
  category: string
  posts: CollectionEntry<'posts'>[]
}

const { category, posts } = Astro.props
const { t } = useTranslations(Astro.locals.language as Language || 'en')

const postMetas: PostMeta[] = posts.map(post => ({
  id: post.id,
  title: post.data.title,
  publishDate: post.data.pubDate,
  updatedDate: post.data.updatedDate,
  description: post.data.description,
  categories: post.data.categories,
  tags: post.data.tags,
  author: post.data.author,
  draft: post.data.draft,
  slug: post.slug,
  collection: 'posts',
  body: post.body,
  data: post.data
}))
---

<BaseLayout
  config={themeConfig}
  title={`${t('meta.categories')}: ${category}`}
  description={`${t('meta.categories')} - ${category}`}
>
  <div class="container mx-auto px-4 py-8">
    <h1 class="text-3xl font-bold mb-8">
      {t('meta.categories')}: {category}
    </h1>
    
    <PostList posts={postMetas} />
  </div>
</BaseLayout>
