---
import type { GetStaticPaths, Page } from 'astro'
import type { CollectionEntry } from 'astro:content'
import type { Language } from '@/types'
import { getCollection } from 'astro:content'
import { themeConfig } from '@/config/default'
import { useTranslations } from '@/i18n'
import BaseLayout from '@/layouts/BaseLayout.astro'
import PostList from '@/components/PostList.astro'
import Pagination from '@/components/Pagination.astro'

interface Props {
  page: Page<CollectionEntry<'posts'>>
}

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  const posts = await getCollection('posts')
  const publishedPosts = posts
    .filter((post) => !post.data.draft)
    .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())

  return paginate(publishedPosts, { pageSize: themeConfig.pageSize })
}

const { page } = Astro.props
const t = useTranslations((Astro.locals.language as Language) || 'en')

const { currentPage, lastPage } = page
const { prev: prevUrl, next: nextUrl } = page.url
---

<BaseLayout
  config={themeConfig}
  title={t('site.title')}
  description={t('site.description')}
>
  <div class="container mx-auto px-4 py-8">
    <PostList posts={page.data} />
    
    <Pagination
      currentPage={currentPage}
      lastPage={lastPage}
      prevUrl={prevUrl}
      nextUrl={nextUrl}
    />
  </div>
</BaseLayout>
