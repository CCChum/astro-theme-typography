---
import { themeConfig } from '@/config'
import LayoutDefault from '@/layouts/LayoutDefault.astro'
import { getSession } from 'auth-astro/server'

const session = await getSession(Astro.request)
if (session) {
  return Astro.redirect('/admin')
}

const { admin } = themeConfig
---

<LayoutDefault config={themeConfig}>
  <div class="container mx-auto px-4 py-8">
    <div class="mx-auto max-w-md">
      <h1 class="mb-8 text-2xl font-bold">Admin Login</h1>
      
      {admin?.enabled ? (
        <form id="login-form" class="space-y-4">
          <div>
            <label for="username" class="block text-sm font-medium">Username</label>
            <input
              type="text"
              id="username"
              name="username"
              class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2"
              required
            />
          </div>
          <div>
            <label for="password" class="block text-sm font-medium">Password</label>
            <input
              type="password"
              id="password"
              name="password"
              class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2"
              required
            />
          </div>
          <button
            type="submit"
            class="w-full rounded-md bg-primary px-4 py-2 text-white"
          >
            Login
          </button>
        </form>
      ) : (
        <p class="text-red-500">Admin login is not enabled.</p>
      )}
    </div>
  </div>
</LayoutDefault>

<script>
const form = document.getElementById('login-form') as HTMLFormElement;
if (form) {
  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = new FormData(form);
    const username = formData.get('username');
    const password = formData.get('password');

    try {
      const response = await fetch('/api/auth/login', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ username, password }),
      });

      if (response.ok) {
        window.location.href = '/admin';
      } else {
        alert('Login failed. Please check your credentials.');
      }
    } catch (error) {
      console.error('Login error:', error);
      alert('Login failed. Please try again.');
    }
  });
}
</script>

<script>
  import { startRegistration, startAuthentication } from '@simplewebauthn/browser'

  const passkeyButton = document.getElementById('passkey-button')
  const registerPasskeyButton = document.getElementById('register-passkey-button')
  
  async function authenticateWithPasskey() {
    try {
      const authOptions = await fetch('/api/auth/passkey/options').then(r => r.json())
      const credential = await startAuthentication(authOptions)

      const response = await fetch('/api/auth/passkey/verify', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(credential),
      })

      if (response.ok) {
        window.location.href = '/admin'
      }
    }
    catch (error) {
      console.error('Passkey authentication failed:', error)
    }
  }

  async function registerPasskey() {
    try {
      const regOptions = await fetch('/api/auth/passkey/register').then(r => r.json())
      const credential = await startRegistration(regOptions)

      const response = await fetch('/api/auth/passkey/register', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(credential),
      })

      if (response.ok) {
        // eslint-disable-next-line no-alert
        window.alert('Passkey 註冊成功！您現在可以使用 Passkey 登錄了。')
      }
    }
    catch (error) {
      console.error('Passkey registration failed:', error)
      // eslint-disable-next-line no-alert
      window.alert('Passkey 註冊失敗，請稍後重試。')
    }
  }

  passkeyButton?.addEventListener('click', authenticateWithPasskey)
  registerPasskeyButton?.addEventListener('click', registerPasskey)
</script>
