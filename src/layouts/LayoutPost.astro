---
import BaseHead from '@/components/BaseHead.astro'
import Header from '@/components/Header.astro'
import Footer from '@/components/Footer.astro'
import PostMeta from '@/components/PostMeta.astro'
import { themeConfig } from '@/config'
import type { LayoutPostProps } from '@/types'

interface Props extends LayoutPostProps {}

const { post, prev, next } = Astro.props
const {
  title,
  description,
  pubDate,
  updatedDate,
  author,
  avatar,
  readingTime,
  categories = [],
  tags = [],
} = post.data

const { title: siteTitle } = themeConfig.site
---

<!doctype html>
<html lang={Astro.locals.language}>
  <head>
    <BaseHead
      title={`${title} | ${siteTitle}`}
      description={description || ''}
      image={post.data.image}
    />
  </head>
  <body>
    <Header />
    <main class="mx-auto max-w-3xl px-4 py-12">
      <article class="prose mx-auto dark:prose-invert lg:prose-lg">
        <header class="mb-8">
          <h1 class="mb-4 text-4xl font-bold">{title}</h1>
          <PostMeta
            pubDate={pubDate}
            updatedDate={updatedDate}
            author={author}
            avatar={avatar}
            readingTime={readingTime}
            categories={categories}
            tags={tags}
          />
        </header>
        <slot />
      </article>

      <!-- Post Navigation -->
      <nav class="mt-12 flex justify-between border-t pt-8">
        {
          prev && (
            <a
              href={`/posts/${prev.slug}`}
              class="group flex flex-col items-start"
            >
              <span class="mb-1 text-sm text-gray-500">Previous Post</span>
              <span class="font-medium group-hover:text-primary">
                {prev.data.title}
              </span>
            </a>
          )
        }
        {
          next && (
            <a
              href={`/posts/${next.slug}`}
              class="group ml-auto flex flex-col items-end"
            >
              <span class="mb-1 text-sm text-gray-500">Next Post</span>
              <span class="font-medium group-hover:text-primary">
                {next.data.title}
              </span>
            </a>
          )
        }
      </nav>

      <!-- Comments -->
      {
        themeConfig.comment && (
          <div class="mt-12 border-t pt-8">
            {themeConfig.comment.provider === 'giscus' && (
              <div
                class="giscus"
                data-repo={themeConfig.comment.giscus?.repo}
                data-repo-id={themeConfig.comment.giscus?.repoId}
                data-category={themeConfig.comment.giscus?.category}
                data-category-id={themeConfig.comment.giscus?.categoryId}
                data-mapping={themeConfig.comment.giscus?.mapping}
                data-reactions-enabled={themeConfig.comment.giscus?.reactionsEnabled}
                data-emit-metadata={themeConfig.comment.giscus?.emitMetadata}
                data-input-position={themeConfig.comment.giscus?.inputPosition}
                data-lang={themeConfig.comment.giscus?.lang}
                data-loading={themeConfig.comment.giscus?.loading}
              />
            )}
            {themeConfig.comment.provider === 'disqus' && (
              <div id="disqus_thread" />
            )}
            {themeConfig.comment.provider === 'twikoo' && (
              <div id="twikoo" />
            )}
          </div>
        )
      }
    </main>
    <Footer />
  </body>
</html>

<script>
  // Load comment system scripts
  const config = themeConfig.comment
  if (config) {
    if (config.provider === 'giscus') {
      const script = document.createElement('script')
      script.src = 'https://giscus.app/client.js'
      script.async = true
      document.body.appendChild(script)
    } else if (config.provider === 'disqus' && config.disqus) {
      const script = document.createElement('script')
      script.src = `https://${config.disqus.shortname}.disqus.com/embed.js`
      script.async = true
      script.setAttribute('data-timestamp', Date.now().toString())
      document.body.appendChild(script)
    } else if (config.provider === 'twikoo' && config.twikoo) {
      const script = document.createElement('script')
      script.src = 'https://cdn.jsdelivr.net/npm/twikoo@1.6.22/dist/twikoo.all.min.js'
      script.async = true
      script.onload = () => {
        window.twikoo.init({
          envId: config.twikoo.envId,
          el: '#twikoo',
          region: config.twikoo.region,
          lang: config.twikoo.lang
        })
      }
      document.body.appendChild(script)
    }
  }
</script>
