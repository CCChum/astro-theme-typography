---
import { useTranslations } from '@/i18n'

interface NavLink {
  key: string
  href: string
}

const navLinks: NavLink[] = [
  { key: 'home', href: '/' },
  { key: 'posts', href: '/posts' },
  { key: 'categories', href: '/categories' },
  { key: 'archive', href: '/archive' }
]

const { language } = Astro.locals
const { t } = useTranslations(language || 'en')
const currentPath = Astro.url.pathname
---

<nav class="hidden items-center space-x-4 md:flex">
  {
    navLinks.map(({ key, href }) => {
      const isActive = 
        href === '/' 
          ? currentPath === href 
          : currentPath.startsWith(href)
      
      return (
        <a
          href={href}
          class={`text-sm font-medium transition-colors hover:text-primary ${
            isActive 
              ? 'text-primary' 
              : 'text-gray-600 dark:text-gray-300'
          }`}
          aria-current={isActive ? 'page' : undefined}
        >
          {t(`nav.${key}`)}
        </a>
      )
    })
  }
</nav>

<button
  type="button"
  class="inline-flex items-center justify-center rounded-md p-2 text-gray-700 hover:bg-gray-100 hover:text-primary focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary dark:text-gray-300 dark:hover:bg-gray-800 md:hidden"
  aria-controls="mobile-menu"
  aria-expanded="false"
>
  <span class="sr-only">Open main menu</span>
  <svg
    class="h-6 w-6"
    fill="none"
    viewBox="0 0 24 24"
    stroke-width="1.5"
    stroke="currentColor"
    aria-hidden="true"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"
    />
  </svg>
</button>

<div class="md:hidden" id="mobile-menu">
  <div class="space-y-1 px-2 pb-3 pt-2">
    {
      navLinks.map(({ key, href }) => {
        const isActive = 
          href === '/' 
            ? currentPath === href 
            : currentPath.startsWith(href)
        
        return (
          <a
            href={href}
            class={`block rounded-md px-3 py-2 text-base font-medium transition-colors hover:bg-gray-100 hover:text-primary dark:hover:bg-gray-800 ${
              isActive 
                ? 'text-primary' 
                : 'text-gray-600 dark:text-gray-300'
            }`}
            aria-current={isActive ? 'page' : undefined}
          >
            {t(`nav.${key}`)}
          </a>
        )
      })
    }
  </div>
</div>

<script>
  const button = document.querySelector('[aria-controls="mobile-menu"]')
  const menu = document.getElementById('mobile-menu')

  if (button && menu) {
    button.addEventListener('click', () => {
      const expanded = button.getAttribute('aria-expanded') === 'true'
      button.setAttribute('aria-expanded', (!expanded).toString())
      menu.classList.toggle('hidden')
    })
  }
</script>
