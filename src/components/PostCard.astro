---
import type { CollectionEntry } from 'astro:content'
import { useTranslations } from '@/i18n'
import { formatDate } from '@/utils'

interface Props {
  post: CollectionEntry<'posts'>
}

const { post } = Astro.props
const { language } = Astro.locals
const { t } = useTranslations(language || 'en')
---

<article class="group relative flex flex-col overflow-hidden rounded-lg border">
  {post.data.image && (
    <div class="aspect-w-16 aspect-h-9 bg-gray-200">
      <img
        src={post.data.image}
        alt={post.data.title}
        class="h-full w-full object-cover object-center transition-all duration-300 group-hover:scale-105"
      />
    </div>
  )}
  
  <div class="flex flex-1 flex-col justify-between p-6">
    <div class="flex-1">
      <div class="mt-2 block">
        <h3 class="text-xl font-semibold text-gray-900 dark:text-white">
          <a href={`/posts/${post.slug}`}>
            <span class="absolute inset-0" />
            {post.data.title}
          </a>
        </h3>
        <p class="mt-3 text-base text-gray-500 dark:text-gray-400">
          {post.data.description}
        </p>
      </div>
      
      {post.data.categories && (
        <div class="mt-4 flex flex-wrap gap-2">
          {post.data.categories.map(category => (
            <a
              href={`/categories/${category}`}
              class="inline-flex items-center rounded-full bg-gray-100 px-3 py-0.5 text-sm font-medium text-gray-800 hover:bg-gray-200 dark:bg-gray-800 dark:text-gray-100 dark:hover:bg-gray-700"
            >
              {category}
            </a>
          ))}
        </div>
      )}
    </div>
    
    <div class="mt-6 flex items-center">
      <div class="flex-shrink-0">
        <span class="sr-only">{post.data.author}</span>
        {post.data.avatar ? (
          <img class="h-10 w-10 rounded-full" src={post.data.avatar} alt="" />
        ) : (
          <div class="h-10 w-10 rounded-full bg-gray-200 dark:bg-gray-700" />
        )}
      </div>
      <div class="ml-3">
        <p class="text-sm font-medium text-gray-900 dark:text-white">
          {post.data.author}
        </p>
        <div class="flex space-x-1 text-sm text-gray-500">
          <time datetime={post.data.pubDate.toISOString()}>
            {formatDate(post.data.pubDate)}
          </time>
          <span aria-hidden="true">&middot;</span>
          <span>{post.data.readingTime} min read</span>
        </div>
      </div>
    </div>
  </div>
</article>
